/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FSE.view;
import javax.swing.ImageIcon;
import FSE.model.Flight_model;
import FSE.model.Booking_model;

/**
 *
 * @author Notandi
 */
public class FrontPage extends javax.swing.JFrame {
    /**
     * Creates new form FrontPage
     */
    Flight_model searchFlight;
    
    Booking_model myBooking;
    
    public  FrontPage() {
        searchFlight = new Flight_model(0, "Any", "Any", "Any", "Any", "Any", true, 0, "Any");
        
        
        initComponents();
        
        
       imagePanel.setIcon(new ImageIcon(getClass().getResource("newAP.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        oneOrTwoWayBG = new javax.swing.ButtonGroup();
        flightFrom = new javax.swing.JComboBox<>();
        flightTo = new javax.swing.JComboBox<>();
        submitSearch = new javax.swing.JButton();
        priceRange = new javax.swing.JComboBox<>();
        twoWay = new javax.swing.JRadioButton();
        oneWay = new javax.swing.JRadioButton();
        directOrNot = new javax.swing.JCheckBox();
        imagePanel = new javax.swing.JLabel();
        airlineSelect = new javax.swing.JComboBox<>();
        fromLabel = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        pricerangeLabel = new javax.swing.JLabel();
        airlineLabel = new javax.swing.JLabel();
        departureText = new javax.swing.JTextField();
        arrivalText = new javax.swing.JTextField();
        departureLabel = new javax.swing.JLabel();
        arrivalLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        flightFrom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Keflavik (KEF) - Iceland", "Kastrup (CPH) - Denmark", "Boston (BOS) - United States of America", "Heathrow (LHR) - United Kingdom" }));
        flightFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightFromActionPerformed(evt);
            }
        });

        flightTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Keflavik (KEF) - Iceland", "Kastrup (CPH) - Denmark", "Boston (BOS) - United States of America", "Heathrow (LHR) - United Kingdom" }));
        flightTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightToActionPerformed(evt);
            }
        });

        submitSearch.setText("Search");
        submitSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitSearchActionPerformed(evt);
            }
        });

        priceRange.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "0 - 10.000 ISK", "10.000 - 30.000 ISK", "30.000 - 50.000 ISK", "50.000 - 100.000 ISK", "100.000 + ISK" }));
        priceRange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceRangeActionPerformed(evt);
            }
        });

        oneOrTwoWayBG.add(twoWay);
        twoWay.setText("Both ways");
        twoWay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoWayActionPerformed(evt);
            }
        });

        oneOrTwoWayBG.add(oneWay);
        oneWay.setText("One-way");
        oneWay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneWayActionPerformed(evt);
            }
        });

        directOrNot.setText("Direct");
        directOrNot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                directOrNotActionPerformed(evt);
            }
        });

        imagePanel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/FSE/view/newAP.png"))); // NOI18N

        airlineSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "Icelandair", "WOW Air", "SAS", "easyJet", "Air France", "American Airlines", "Delta", "Lufthansa" }));
        airlineSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                airlineSelectActionPerformed(evt);
            }
        });

        fromLabel.setText("From");

        toLabel.setText("To");

        pricerangeLabel.setText("Price range");

        airlineLabel.setText("Airline");

        departureText.setText("Any");
        departureText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departureTextActionPerformed(evt);
            }
        });

        arrivalText.setText("Any");
        arrivalText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrivalTextActionPerformed(evt);
            }
        });

        departureLabel.setText("Departure date");

        arrivalLabel.setText("Return date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(fromLabel)
                .addGap(80, 80, 80)
                .addComponent(imagePanel)
                .addGap(52, 52, 52)
                .addComponent(toLabel)
                .addGap(186, 186, 186))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(arrivalLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(airlineSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(115, 115, 115))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(directOrNot)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(departureText, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(arrivalText, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(flightFrom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(oneWay)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(twoWay))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(departureLabel)
                                .addGap(179, 179, 179)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(flightTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(airlineLabel)
                                .addGap(173, 173, 173))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(pricerangeLabel)
                                .addGap(159, 159, 159))))))
            .addGroup(layout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addComponent(submitSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(fromLabel))
                            .addComponent(toLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(imagePanel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flightFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(flightTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(oneWay)
                            .addComponent(twoWay)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pricerangeLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceRange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departureLabel)
                    .addComponent(arrivalLabel))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(arrivalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(departureText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(airlineLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(directOrNot)
                    .addComponent(airlineSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(submitSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void oneWayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneWayActionPerformed
        arrivalText.setVisible(false);
        arrivalLabel.setVisible(false);
        searchFlight.setArrivalTime("NULL");
    }//GEN-LAST:event_oneWayActionPerformed

    private void twoWayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoWayActionPerformed
        arrivalText.setVisible(true);
        arrivalLabel.setVisible(true);
        searchFlight.setArrivalTime(arrivalText.getText());
    }//GEN-LAST:event_twoWayActionPerformed

    private void submitSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitSearchActionPerformed
        searchFlight.printInfo();
        
        searchResults results = new searchResults (this, true);
     
        results.setVisible(true);
        
    }//GEN-LAST:event_submitSearchActionPerformed

    private void directOrNotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_directOrNotActionPerformed
        if(searchFlight.getDirect() == true)
        searchFlight.setDirect(false);
        
        else
        searchFlight.setDirect(true); 
    }//GEN-LAST:event_directOrNotActionPerformed

    private void priceRangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceRangeActionPerformed
        
    }//GEN-LAST:event_priceRangeActionPerformed

    private void airlineSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_airlineSelectActionPerformed
        searchFlight.setAirline((String)airlineSelect.getSelectedItem());
    }//GEN-LAST:event_airlineSelectActionPerformed

    private void flightFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightFromActionPerformed
        searchFlight.setDepartureLocation((String)flightFrom.getSelectedItem());
        if(searchFlight.getDepartureLocation().equals(searchFlight.getArrivalLocation())){
        System.out.println("Please select an arrival location different from the departure location.");
        flightFrom.setSelectedIndex(0);
        }
        else 
            searchFlight.setDepartureLocation((String)flightFrom.getSelectedItem());
    }//GEN-LAST:event_flightFromActionPerformed

    private void flightToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightToActionPerformed
        searchFlight.setArrivalLocation((String)flightTo.getSelectedItem());
        if(searchFlight.getArrivalLocation().equals(searchFlight.getDepartureLocation())){
        System.out.println("Please select an arrival location different from the departure location.");
        flightTo.setSelectedIndex(0);
        }
        else 
            searchFlight.setArrivalLocation((String)flightTo.getSelectedItem());
        
    }//GEN-LAST:event_flightToActionPerformed

    private void departureTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departureTextActionPerformed
        searchFlight.setDepartureTime(departureText.getText());
    }//GEN-LAST:event_departureTextActionPerformed

    private void arrivalTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrivalTextActionPerformed
        searchFlight.setArrivalTime(arrivalText.getText());
        System.out.println(searchFlight.getArrivalTime());
    }//GEN-LAST:event_arrivalTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrontPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrontPage().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel airlineLabel;
    private javax.swing.JComboBox<String> airlineSelect;
    private javax.swing.JLabel arrivalLabel;
    private javax.swing.JTextField arrivalText;
    private javax.swing.JLabel departureLabel;
    private javax.swing.JTextField departureText;
    private javax.swing.JCheckBox directOrNot;
    private javax.swing.JComboBox<String> flightFrom;
    private javax.swing.JComboBox<String> flightTo;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JLabel imagePanel;
    private javax.swing.ButtonGroup oneOrTwoWayBG;
    private javax.swing.JRadioButton oneWay;
    private javax.swing.JComboBox<String> priceRange;
    private javax.swing.JLabel pricerangeLabel;
    private javax.swing.JButton submitSearch;
    private javax.swing.JLabel toLabel;
    public javax.swing.JRadioButton twoWay;
    // End of variables declaration//GEN-END:variables
}
